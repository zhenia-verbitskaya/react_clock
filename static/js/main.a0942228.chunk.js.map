{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","interval","state","date","Date","toLocaleTimeString","this","window","setInterval","step","name","props","console","log","clearInterval","setState","React","Component","App","isShown","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAIaA,EAAb,4MACEC,cADF,IAGEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAJrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,SAAWM,OAAOC,aACrB,kBAAM,EAAKC,SACX,OAVN,gCAcE,YAAqC,IAAhBC,EAAe,EAAfA,KACfJ,KAAKK,MAAMD,OAASA,GAEtBE,QAAQC,IAAR,qCAA0CH,EAA1C,eAAqDJ,KAAKK,MAAMD,SAjBtE,kCAqBE,WACEI,cAAcR,KAAKL,YAtBvB,kBAyBE,WAEEW,QAAQC,IAAIP,KAAKJ,MAAMC,MAEvBG,KAAKS,SAAS,CACZZ,MAAM,IAAIC,MAAOC,yBA9BvB,oBAkCE,WACE,OACE,mCACGC,KAAKJ,MAAMC,WArCpB,GAA2Ba,IAAMC,WCApBC,EAAb,4MACEhB,MAAQ,CACNiB,SAAS,EACTC,UAAW,GAHf,4CAME,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,wDAEOf,KAAKJ,MAAMkB,cAElB,mBAAGC,UAAU,YAAb,SACGf,KAAKJ,MAAMiB,SAAW,cAAC,EAAD,CAAOT,KAAMJ,KAAKJ,MAAMkB,cAGjD,sBAAKC,UAAU,gBAAf,UACE,wBACEA,UAAU,MACVC,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAEI,SAAS,KAJ7B,wBAUA,wBACEE,UAAU,MACVC,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAEI,SAAS,KAJ7B,wBAUA,wBACEE,UAAU,MACVC,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAEK,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAJ/C,kCAtCV,GAAyBV,IAAMC,WCD/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0942228.chunk.js","sourcesContent":["import React from 'react';\nimport { Props } from '../types/Props';\nimport { State } from '../types/State';\n\nexport class Clock extends React.Component<Props, State> {\n  interval?: number;\n\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.interval = window.setInterval(\n      () => this.step(),\n      1000,\n    );\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  step() {\n    // eslint-disable-next-line no-console\n    console.log(this.state.date);\n\n    this.setState({\n      date: new Date().toLocaleTimeString(),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nexport class App extends React.Component {\n  state = {\n    isShown: true,\n    clockName: 1,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Clock name:\n          {` ${this.state.clockName}`}\n        </h1>\n        <p className=\"clock-box\">\n          {this.state.isShown && <Clock name={this.state.clockName} />}\n        </p>\n\n        <div className=\"clock-buttons\">\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isShown: true });\n            }}\n          >\n            Show Clock\n          </button>\n\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isShown: false });\n            }}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ clockName: Math.floor(Math.random() * 1000) });\n            }}\n          >\n            Clock name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}